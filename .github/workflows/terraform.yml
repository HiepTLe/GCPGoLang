name: Terraform Infrastructure Management

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

permissions:
  contents: read
  id-token: write
  pull-requests: write
  issues: write

# Don't run concurrent deployments of the same workflow on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [project-setup, github-actions]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.3

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Terraform Format Check
        id: fmt
        run: |
          cd terraform/${{ matrix.module }}
          terraform fmt -check
          
      - name: Terraform Init
        id: init
        run: |
          cd terraform/${{ matrix.module }}
          terraform init -input=false
          
      - name: Terraform Validate
        id: validate
        run: |
          cd terraform/${{ matrix.module }}
          terraform validate -no-color

  plan:
    name: Terraform Plan
    needs: validate
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [project-setup, github-actions]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.3

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Copy tfvars
        run: |
          cd terraform/${{ matrix.module }}
          cp terraform.tfvars.example terraform.tfvars
          # Set project-specific values
          sed -i 's/your-gcp-project-id/gcpgolang/' terraform.tfvars
          sed -i 's/your-gcp-project-number/652769711122/' terraform.tfvars
          sed -i 's/your-github-username-or-org/HiepTLe/' terraform.tfvars
          
      - name: Terraform Init
        id: init
        run: |
          cd terraform/${{ matrix.module }}
          terraform init -input=false
          
      - name: Terraform Plan
        id: plan
        run: |
          cd terraform/${{ matrix.module }}
          terraform plan -no-color -input=false -out=tfplan
        continue-on-error: true

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.module }}-tfplan
          path: terraform/${{ matrix.module }}/tfplan
          
      - name: Terraform Show
        id: show
        run: |
          cd terraform/${{ matrix.module }}
          terraform show -no-color tfplan > tfplan.txt

      - name: Add Plan to PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const module = '${{ matrix.module }}';
            const plan = fs.readFileSync(`terraform/${module}/tfplan.txt`, 'utf8');
            
            const planSummary = plan.length > 30000 
              ? plan.substring(0, 30000) + "\n\n... Output truncated. See full plan in artifacts ..."
              : plan;
              
            const comment = `## Terraform Plan for ${module}
            
            \`\`\`terraform
            ${planSummary}
            \`\`\`
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Module: \`${module}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  apply:
    name: Terraform Apply
    needs: plan
    # Only apply changes from main branch or manual workflow dispatch
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [project-setup, github-actions]
    environment: ${{ github.event.inputs.environment || 'dev' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.3

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.module }}-tfplan
          path: terraform/${{ matrix.module }}

      - name: Terraform Init
        id: init
        run: |
          cd terraform/${{ matrix.module }}
          terraform init -input=false
          
      - name: Terraform Apply
        id: apply
        run: |
          cd terraform/${{ matrix.module }}
          terraform apply -auto-approve -input=false tfplan
          
      - name: Terraform Outputs
        id: outputs
        run: |
          cd terraform/${{ matrix.module }}
          terraform output -json > tf-outputs.json
          
      - name: Upload Terraform Outputs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.module }}-outputs
          path: terraform/${{ matrix.module }}/tf-outputs.json 